<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fansfunding.project.dao.FundFlowDao" >
  <resultMap id="BaseResultMap" type="com.fansfunding.project.entity.FundFlow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    update fund_flow
    set del_flag='1'
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.fansfunding.project.entity.FundFlow" >
    insert into fund_flow (project_id, user_id, money, status, create_by,
      create_time, update_by, update_time)
    values (#{projectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{money,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      NOW(), #{updateBy,jdbcType=VARCHAR}, NOW())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fansfunding.project.entity.FundFlow" >
    update fund_flow
    set project_id = #{projectId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      status = #{status,jdbcType=CHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = NOW()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, project_id, user_id, money, status, create_by, create_time, update_by, 
    update_time, del_flag
    from fund_flow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByProjectId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, project_id, user_id, money, status, create_by, create_time, update_by, 
    update_time, del_flag
    from fund_flow
    where project_id = #{projectId,jdbcType=INTEGER}
    and del_flag='0'
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, project_id, user_id, money, status, create_by, create_time, update_by, 
    update_time, del_flag
    from fund_flow
    where user_id = #{userId,jdbcType=INTEGER}
    and del_flag='0'
  </select>
</mapper>